let g:coc_global_extensions = [
 \ 'coc-snippets',
 \ 'coc-actions',
 \ 'coc-lists',
 \ 'coc-tsserver',
 \ 'coc-html',
 \ 'coc-css',
 \ 'coc-cssmodules',
 \ 'coc-prettier',
 \ 'coc-vimlsp',
 \ 'coc-highlight',
 \ 'coc-pairs',
 \ ]

" Coc-Prettier
 command! -nargs=0 Prettier :CocCommand prettier.formatFile

" Coc-highlight"
 autocmd CursorHold * silent call CocActionAsync('highlight')

nmap <leader>rn <Plug>(coc-rename)
xmap <silent> <leader>a  <Plug>(coc-codeaction-selected)
nmap <silent> <leader>a  <Plug>(coc-codeaction-selected)

"<Tab> para navegar e <Ctrl-Space> para abrir popup
 inoremap <silent><expr> <TAB>
 \ pumvisible() ? "\<C-n>" :
  \ <SID>check_back_space() ? "\<TAB>" :
  \ coc#refresh()
 inoremap <expr><S-TAB> pumvisible() ? "\<C-p>" : "\<C-h>"

 function! s:check_back_space() abort
 let col = col('.') - 1
  return !col || getline('.')[col - 1] =~# '\s'
  endfunction

  inoremap <silent><expr> <c-space> coc#refresh()
  inoremap <silent><expr> <cr> pumvisible() ? coc#_select_confirm()
  \: "\<C-g>u\<CR>\<c-r>=coc#on_enter()\<CR>"
				
